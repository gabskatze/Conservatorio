<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABCAEQDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /CcCq99exWMDTTSJDDECzu7bVUepJqaR8If8a+af2/8A9r6z/Z48I29vBbxat4o1gMdI0x2/dRgcG7uM
        EHy1PAXgu2QMAMyzUqRhFzlokJySXM9jY/aJ/bg0T4M6I11Pfabo9mxKpfanv3Tn0gt1/eSN9Acd1xnH
        xv46/wCCr+qeJr+SPQbHx3rysfldZU0qF/dQuWx+A/CuT+GPwEuvjR4lbxz8TtRv9cu775oo5H2tInYK
        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
        HtULx2FFFVEykXKKKKok/9k=
</value>
  </data>
</root>