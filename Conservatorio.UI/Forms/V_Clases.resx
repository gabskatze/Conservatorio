<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQECWAJYAAD/4RI2RXhpZgAATU0AKgAAAAgACgEOAAIAAAAuAAAAhgESAAMAAAAB
        AAEAAAEaAAUAAAABAAAAtAEbAAUAAAABAAAAvAEoAAMAAAABAAIAAAExAAIAAAAcAAAAxAEyAAIAAAAU
        AAAA4IdpAAQAAAABAAAA9JybAAEAAABcAAABFJyfAAEAAABcAAABcAAAAcxHb2xkZW4gbWFnbmlmeWlu
        ZyBnbGFzcyBvdmVyIHdoaXRlIGJhY2tncm91bmQAAAACWAAAAAEAAAJYAAAAAUFkb2JlIFBob3Rvc2hv
        cCBDUzIgV2luZG93cwAyMDEwOjAxOjIzIDEzOjI5OjEwAAACoAIABAAAAAEAABcYoAMABAAAAAEAABcY
        AAAAAAAARwBvAGwAZABlAG4AIABtAGEAZwBuAGkAZgB5AGkAbgBnACAAZwBsAGEAcwBzACAAbwB2AGUA
        cgAgAHcAaABpAHQAZQAgAGIAYQBjAGsAZwByAG8AdQBuAGQAAABHAG8AbABkAGUAbgAgAG0AYQBnAG4A
        aQBmAHkAaQBuAGcAIABnAGwAYQBzAHMAIABvAHYAZQByACAAdwBoAGkAdABlACAAYgBhAGMAawBnAHIA
        bwB1AG4AZAAAAAAGAQMAAwAAAAEABgAAARoABQAAAAEAAAIaARsABQAAAAEAAAIiASgAAwAAAAEAAgAA
        AgEABAAAAAEAAAIqAgIABAAAAAEAABADAAAAAAAAAlgAAAABAAACWAAAAAH/2P/gABBKRklGAAECAABI
        AEgAAP/tAAxBZG9iZV9DTQAB/+4ADkFkb2JlAGSAAAAAAf/bAIQADAgICAkIDAkJDBELCgsRFQ8MDA8V
        GBMTFRMTGBEMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAENCwsNDg0QDg4QFA4ODhQU
        Dg4ODhQRDAwMDAwREQwMDAwMDBEMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAoACgAwEi
        AAIRAQMRAf/dAAQACv/EAT8AAAEFAQEBAQEBAAAAAAAAAAMAAQIEBQYHCAkKCwEAAQUBAQEBAQEAAAAA
        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
        eHQAAAAAQ29weXJpZ2h0IChjKSAxOTk4IEhld2xldHQtUGFja2FyZCBDb21wYW55AABkZXNjAAAAAAAA
        ABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAA81EAAQAAAAEWzFhZ
        WiAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAG+iAAA49QAAA5BYWVogAAAAAAAAYpkAALeFAAAY2lhZ
        WiAAAAAAAAAkoAAAD4QAALbPZGVzYwAAAAAAAAAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAAAAAAAAAA
        AAAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGRlc2MAAAAAAAAALklFQyA2MTk2Ni0yLjEgRGVmYXVsdCBSR0IgY29sb3VyIHNwYWNl
        IC0gc1JHQgAAAAAAAAAAAAAALklFQyA2MTk2Ni0yLjEgRGVmYXVsdCBSR0IgY29sb3VyIHNwYWNlIC0g
        c1JHQgAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25k
        aXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9u
        IGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdmlldwAAAAAAE6T+ABRfLgAQ
        zxQAA+3MAAQTCwADXJ4AAAABWFlaIAAAAAAATAlWAFAAAABXH+dtZWFzAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAACjwAAAAJzaWcgAAAAAENSVCBjdXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgALQAy
        ADcAOwBAAEUASgBPAFQAWQBeAGMAaABtAHIAdwB8AIEAhgCLAJAAlQCaAJ8ApACpAK4AsgC3ALwAwQDG
        AMsA0ADVANsA4ADlAOsA8AD2APsBAQEHAQ0BEwEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8
        AYMBiwGSAZoBoQGpAbEBuQHBAckB0QHZAeEB6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcCcQJ6
        AoQCjgKYAqICrAK2AsECywLVAuAC6wL1AwADCwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPH
        A9MD4APsA/kEBgQTBCAELQQ7BEgEVQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVn
        BXcFhgWWBaYFtQXFBdUF5QX2BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0HTwdh
        B3QHhgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7CRAJJQk6CU8JZAl5CY8JpAm6
        Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMMXAx1
        DI4MpwzADNkM8w0NDSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9BD14Peg+W
        D7MPzw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQSoxLDEuMTAxMj
        E0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsVvRXgFgMWJhZJFmwWjxayFtYW+hcd
        F0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEadxqeGsUa7BsUGzsbYxuK
        G7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7pHxMfPh9pH5Qfvx/qIBUgQSBs
        IJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij8CQfJE0kfCSrJNolCSU4JWgllyXH
        JfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4KWspnSnQKgIqNSpoKpsqzysCKzYraSud
        K9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4vJC9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHy
        MioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1EzVNNYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjI
        OQU5Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/4kAj
        QGRApkDnQSlBakGsQe5CMEJyQrVC90M6Q31DwEQDREdEikTORRJFVUWaRd5GIkZnRqtG8Ec1R3tHwEgF
        SEtIkUjXSR1JY0mpSfBKN0p9SsRLDEtTS5pL4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1Bx
        ULtRBlFQUZtR5lIxUnxSx1MTU19TqlP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllp
        WbhaB1pWWqZa9VtFW5Vb5Vw1XIZc1l0nXXhdyV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9homH1YklinGLw
        Y0Njl2PrZEBklGTpZT1lkmXnZj1mkmboZz1nk2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20I
        bWBtuW4SbmtuxG8eb3hv0XArcIZw4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3Vnez
        eBF4bnjMeSp5iXnnekZ6pXsEe2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0
        g1eDuoQdhICE44VHhauGDoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7O
        jzaPnpAGkG6Q1pE/kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia1ZtC
        m6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9p26n4KhS
        qMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660JbSctRO1irYB
        tnm28Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFnwePCX8Lbw1jD1MRR
        xM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62zzfPuNA50LrRPNG+0j/SwdNE
        08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHadtr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE4cziU+Lb
        42Pj6+Rz5PzlhOYN5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw5fFy8f/yjPMZ
        86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p/br+S/7c/23////bAEMAAgEBAgEBAgIC
        AgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcKDQoKCwwMDAwHCQ4PDQwOCwwMDP/bAEMB
        AgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDP/AABEIAB8AHwMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1
        EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZ
        GiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/
        xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQF
        ITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpT
        VFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
        w8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP2G+K3ibxj8Xfjq
        3w88J6hP4e0HR7KO/wDFOv24X7WnmMwgsbTdkLK4VmaUqwVQRgtgVtav+yR4b1DSlVbrxXZ3sYzHqdr4
        jvYr5G/v+b5vzHIBIcMrH7ysMiqPgfxNeeCf2svG3h3Uodll4itbTWtHuCMLO6iSO4hz6qFiYDkkedwA
        oLevNej5mLA5GFUdB9a8fC4Oji3OpioKclOUddeVJtRsn8LceWTtq732sdNatKnyqlJxVk9NLtrW/ezu
        vl6nk37O3jfxlo3xE174e+PJ11i80W3TUNA8RRwiH+39Odih+0RqAi3kEi7JNgCOrxOqpvKj2J4i0ytu
        ICjp61454dv73xx+2dcTWaTf2D4K8MyWF5chv3M2o3txDKIAO7xQWqsxzwLmMdc17Gyu0w+bbGo6DqTX
        Rls24Tje8Yyai73ul3fVp3j52u9Sa/2ZNWbSbX9d1Z/Mw/GXw+sfH9sq6gskU1s++0uLd9k9q395W5Ge
        AcEFTgZBrMsfhdqC2slteeKtYu4OiyCKCG4I7hnRAPUZVVI9c8118TszNuXAB4560kbs8zfLtReB6k1V
        bLsPVm6k46tWbTabS2Ts1deTutX3M1Uklb81f7r7H5r/ALTv7dfiD/giv+1r4e0/xhot9rf7PvxX1Sae
        48SLKZpvDd0UVSdvzSOwAjMqMSJEUyxZkMsVfo54c8S2PjTQNN1jRr6y1TR9Wto7yzvLWUTQXcMih45Y
        3UlWRlIYMCQQQa80/bb/AGPfCn7eP7OPiT4ZeMrWOTS9cg3W14Iw8+lXa5MN1DnGHjb0I3KWQnazA/IX
        /BBb4A/GL9iLSvGXwW+JXiW38SaNos81/wCH4oJPOj0SJbqSFo0kY79lxhblYwCsYkOSrs6Dno06OXqN
        ClFqEpWSSbUW7u392PbaK200PSqezxOH9rzWqR0af2l0kvNbSXXRq7uf/9k=
</value>
  </data>
</root>